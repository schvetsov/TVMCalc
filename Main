import java.util.Scanner;

public class Calculator{

	public static void main(String[] args){

		Scanner myScanner = new Scanner(System.in);
		double initialInvestment;
		String investPeriodically="a";
		double periodicPayments=0;
		String frequencyOfPayments="a";
		String typeOfInterest="a";
		double APR;
		double numberOfYears;
		String yes="a";
		String no="a";
		String simple="a";
		String compound="a";
		String continuous="a";
		String daily="a";
		String monthly="a";
		String semiannually="a";
		String annually="a";

		try{
		
		//Asks a series of questions, and stores inputs in variables
			System.out.println("Welcome to the TimeValueofMoney Calculator!");
			System.out.println("How much is your initial investment?");
			initialInvestment = myScanner.nextDouble();
			System.out.println("Do you plan to invest periodically? Enter yes or no:");
			investPeriodically = myScanner.next();

			if(investPeriodically.equals("yes")){
				System.out.println("How big are your periodic payments?");
				periodicPayments = myScanner.nextDouble();
				System.out.println("How often will you be investing? daily, monthly, semiannually, or annually");
				frequencyOfPayments = myScanner.next();
			}

			System.out.println("What type of interest is used? simple, compound, or continuous");
			typeOfInterest = myScanner.next();
			System.out.println("Please enter the nominal interest rate:");
			APR = myScanner.nextDouble();
			System.out.println("For how many years will you hold this investment?");
			numberOfYears = myScanner.nextDouble();
			
		//Passes all inputs to calculation function
			double result=doCalc(initialInvestment, investPeriodically, periodicPayments, frequencyOfPayments, 
				typeOfInterest, APR, numberOfYears, yes, no, simple, compound, continuous, daily, monthly, 
				semiannually, annually);
				
		//Prints out results
			System.out.println("Your future value is: "+result);

		}catch(Exception e){
			System.out.println("Error while reading file line by line" + e.getMessage());
		}

	}

//This is the function where all the calculations are done

	public static double doCalc(double initialInvestment, String investPeriodically, double periodicPayments, 
		String frequencyOfPayments, String typeOfInterest, double APR, double numberOfYears, String yes, String no, 
		String simple, String compound, String continuous, String daily, String monthly, String semiannually, String annually){

		double result=0;
		double sum=0;
		double i=0;
		double n=0;
		double d=0;

		if(typeOfInterest.equals("simple")){
			if(investPeriodically.equals("no")){
				result = (initialInvestment*(1+(0.01)*APR*numberOfYears));
			}else{
				double initial =  (initialInvestment*(1+(0.01)*APR*numberOfYears));
				while(numberOfYears>0){
					double payment = periodicPayments*(1+(0.01)*APR*(numberOfYears-1));
					sum = sum + payment;
					numberOfYears--;
				}
				result = initial + sum;
			}
		}

		if(typeOfInterest.equals("compound")){
			if(frequencyOfPayments.equals("daily")){
				i = APR/365.0;
			}else if(frequencyOfPayments.equals("monthly")){
				i = APR/12.0;
			}else if(frequencyOfPayments.equals("semiannually")){
				i = APR/2.0;
			}else{
				i = APR;
			}

			if(frequencyOfPayments.equals("daily")){
				n = numberOfYears/365.0;
			}else if(frequencyOfPayments.equals("monthly")){
				n = numberOfYears/12.0;
			}else if(frequencyOfPayments.equals("semiannually")){
				n = numberOfYears/2.0;
			}else{
				n = numberOfYears;
			}
			if(investPeriodically.equals("no")){
				result = (initialInvestment*Math.pow((1+(0.01)*i),n));
			}else{
				result = periodicPayments*(Math.pow((1+(0.01)*i),n)-1)/((0.01)*i) + 
				(initialInvestment*Math.pow((1+(0.01)*i),n));
			}
		}

		if(typeOfInterest.equals("continuous")){
		
			if(frequencyOfPayments.equals("daily")){
				i = APR/365.0;
			}else if(frequencyOfPayments.equals("monthly")){
				i = APR/12.0;
			}else if(frequencyOfPayments.equals("semiannually")){
				i = APR/2.0;
			}else{
				i = APR;
			}

			d = Math.log(1+(0.01)*i);
			n = numberOfYears;

			if(investPeriodically.equals("no")){

				result = (initialInvestment*(Math.exp(n*d)));
			}else{
				result = (periodicPayments*((Math.exp(n*d)-1)/d) + (initialInvestment*(Math.exp(n*d))));
			}
		}

		return result;
	}
}
